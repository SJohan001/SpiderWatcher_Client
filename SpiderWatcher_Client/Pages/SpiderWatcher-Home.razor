@page "/"
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthService
@using SpiderWatcher_Client.DTOs.UserDTO


<PageTitle>SpiderWatcher-Home</PageTitle>

<div class="container-fluid bg-dark text-white full-height d-flex justify-content-center align-items-center">
    <div class="row w-100">
        <div class="col-md-6 d-flex justify-content-center align-items-center left-section">
            <div class="image-container position-relative">
                <img src="https://storage.prompt-hunt.workers.dev/clgof48ov004vjs08tdzg1ggm_1" alt="Your Image" class="img-fluid large-image">
                <h1 class="image-text position-absolute text-center w-100 titleImg">SpiderWatcher</h1>
            </div>
        </div>
        <div class="col-md-6 d-flex justify-content-center align-items-center right-section bg-dark">
            <div class="w-100 px-3">
                <h2 class="text-info text-center loginBig">Login</h2>

                @if (showError)
                {
                    <div class="alert alert-danger" role="alert">
                        El usuario o la contraseña no son correctos.
                    </div>
                }

                <div class="form-group">
                    <label for="username" class="text-light label-medium"></label>
                    <InputText id="username" @bind-Value="loginUserDTO.UserName" class="form-control bg-secondary text-white small-input input-white" placeholder="Username" required />
                </div>
                <div class="form-group">
                    <label for="password" class="text-light label-medium"></label>
                    <InputText id="password" @bind-Value="loginUserDTO.Password" class="form-control bg-secondary text-white small-input input-white" placeholder="Password" required Type="password" />
                    <a href="#" @onclick="ShowRecoverAccount" class="text-info">Forgot Password?</a>
                </div>
                <div class="form-group text-center">
                    <button class="btn btn-primary btn-block smaller-btn" @onclick="Login">Login</button>
                </div>
                <div>
                    <label></label>
                </div>
                <div class="form-group text-center">
                    <button class="btn btn-secondary smaller-btn" @onclick="ShowModal">Create Account</button>
                </div>
            </div>
        </div>
    </div>
</div>

@if (showModal)
{
    <div class="modal show d-block gradient-background text-white" tabindex="-1" style="display: block;">
        <div class="modal-dialog modal-lg bg-dark">
            <div class="modal-content bg-dark">
                <div class="modal-header">
                    <button type="button" class="btn-close btn-close-white" @onclick="HideModal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <CrearCuenta />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HideModal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@if (showRecoverAccount)
{
    <div class="modal show d-block gradient-background text-white" tabindex="-1" style="display: block;">
        <div class="modal-dialog modal-lg bg-dark">
            <div class="modal-content bg-dark">
                <div class="modal-header">
                    <button type="button" class="btn-close btn-close-white" @onclick="HideRecoverAccount" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <RecuperarCuenta />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HideRecoverAccount">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private LoginUserDTO loginUserDTO = new LoginUserDTO();

    private bool showModal = false;
    private bool showRecoverAccount = false;
    private bool showError = false;

    //on initialize
    protected override async Task OnInitializedAsync()
    {
        //if user is authenticated, redirect to contenidoBusqueda
        var isAuthenticated = await AuthService.IsUserAuthenticatedAsync();
        if (isAuthenticated)
        {
            NavigationManager.NavigateTo("/contenidoBusqueda");
        }
    }
    private void ShowModal()
    {
        showModal = true;
    }

    private void HideModal()
    {
        showModal = false;
    }

    private void ShowRecoverAccount()
    {
        showRecoverAccount = true;
    }
    
    private void HideRecoverAccount()
    {
        showRecoverAccount = false;
    }

    private async Task Login()
    {
        var isAuthenticated = await AuthService.LoginAsync(loginUserDTO);
        if (isAuthenticated)
        {
            NavigationManager.NavigateTo("/contenidoBusqueda");
        }
        else
        {
            showError = true;

        }
    }   
}

<style>
    .full-height {
        height: 100vh;
    }

    .image-container {
        position: relative;
        text-align: center;
    }

    .image-text {
        top: 10px;
        left: 50%;
        transform: translateX(-50%);
        color: white;
        font-size: 3rem;
        z-index: 1;
    }

    .large-image {
        width: 100%;
        max-width: 800px;
        height: auto;
    }

    .gradient-background {
        backdrop-filter: blur(10px);
    }

    .left-section, .right-section {
        padding: 2rem;
    }

    .form-control {
        font-size: 1.25rem; 
        padding: 0.75rem; 
    }

    .btn {
        font-size: 1rem; 
        padding: 0.5rem 1rem; 
    }

    .smaller-btn {
        font-size: 1rem;
        padding: 0.5rem 1rem; 
    }

    .small-input {
        width: 100%; 
        height: auto;
    }

    .label-medium{
        font-size: 1.5rem;
    }

    .loginBig{
        font-size: 3rem;
        font-style: Aileron;
        font-weight: bold;
    }

    .titleImg{
        text-decoration: underline;
    }

    .input-white::placeholder {
        color: #ffff;
    }
</style>